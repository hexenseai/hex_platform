# Generated by Django 5.1 on 2025-05-13 11:30

import django.db.models.deletion
import hexense_core.utils
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=hexense_core.utils.company_logo_upload_path)),
                ('openai_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('gemini_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('claude_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('deepseek_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('azure_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('azure_endpoint', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Organisation: Companies',
            },
        ),
        migrations.CreateModel(
            name='GptModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=50, unique=True)),
                ('provider', models.CharField(choices=[('openai', 'OpenAI'), ('anthropic', 'Anthropic Claude'), ('gemini', 'Google Gemini')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_local', models.BooleanField(default=False, help_text='Model yerel olarak mı çalıştırılıyor?')),
                ('local_path', models.CharField(blank=True, help_text='Hugging Face veya dosya yolu', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Model',
                'verbose_name_plural': 'Agent Management: Models',
            },
        ),
        migrations.CreateModel(
            name='GptPackageGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Package',
                'verbose_name_plural': 'Agent Management: Packages',
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('memory_summary', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Conversation',
                'verbose_name_plural': 'Agent Management: Conversations',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='hexense_core.company')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_departments', to='hexense_core.department')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Organisation: Departments',
            },
        ),
        migrations.CreateModel(
            name='GptService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('input_schema', models.JSONField(default=dict, help_text='Beklenen parametreler ve açıklamaları')),
                ('output_schema', models.JSONField(blank=True, help_text='Yanıt formatı (isteğe bağlı)', null=True)),
                ('function_name', models.CharField(default='call_service', help_text='tools.py içinde çağrılacak fonksiyonun adı', max_length=100)),
                ('default_params', models.JSONField(blank=True, help_text='Fonksiyona eklenecek sabit parametreler (isteğe bağlı)', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='hexense_core.gptpackagegroup')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Agent Management: Services',
            },
        ),
        migrations.CreateModel(
            name='GptPackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('system_prompt', models.TextField()),
                ('is_default', models.BooleanField(default=False)),
                ('model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='packages', to='hexense_core.gptmodel')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packages', to='hexense_core.gptpackagegroup')),
                ('services', models.ManyToManyField(blank=True, related_name='packages', to='hexense_core.gptservice')),
            ],
            options={
                'verbose_name': 'Agent',
                'verbose_name_plural': 'Agent Management: Agents',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sender', models.CharField(choices=[('user', 'User'), ('gpt', 'GPT')], max_length=10)),
                ('content', models.TextField()),
                ('actions', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='hexense_core.conversation')),
                ('gpt_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hexense_core.gptpackage')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Agent Management: Messages',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='hexense_core.department')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Organisation: Roles',
            },
        ),
        migrations.AddField(
            model_name='gptpackage',
            name='allowed_roles',
            field=models.ManyToManyField(blank=True, related_name='gpt_packages', to='hexense_core.role'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=hexense_core.utils.avatar_upload_path)),
                ('gpt_preferences', models.TextField(blank=True, help_text='GPT kullanım tercihlerini açıklayın.')),
                ('work_experience_notes', models.TextField(blank=True, help_text='İş geçmişiniz veya uzmanlık alanlarınız hakkında bilgi girin.')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='hexense_core.company')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='hexense_core.department')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='hexense_core.role')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'Organisation: User Profiles',
            },
        ),
    ]
